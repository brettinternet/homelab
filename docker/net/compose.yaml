---
# yaml-language-server: $schema=https://raw.githubusercontent.com/docker/cli/master/cli/compose/schema/data/config_schema_v3.9.json
x-options: &options
  profiles: [base]
  networks: [default]
  # dns: ["${DNS}"]
  environment: &environment
    TZ: "${TIMEZONE}"
  deploy:
    restart_policy:
      condition: unless-stopped

networks:
  default:
    ipam:
      driver: default
      config:
        - subnet: "${DOCKER_SUBNET}"

services:
  diun:
    <<: *options
    image: crazymax/diun:latest
    container_name: diun
    command: serve
    environment:
      <<: *environment
      LOG_LEVEL: info
      LOG_JSON: "false"
      DIUN_WATCH_WORKERS: 20
      DIUN_WATCH_SCHEDULE: 0 6 * * *
      DIUN_WATCH_JITTER: 30s
      DIUN_WATCH_RUNONSTARTUP: "true"
      DIUN_PROVIDERS_DOCKER: "true"
      DIUN_PROVIDERS_DOCKER_WATCHBYDEFAULT: "true"
      DIUN_NOTIF_PUSHOVER_TOKEN: "${PUSHOVER_DIUN_TOKEN}"
      DIUN_NOTIF_PUSHOVER_RECIPIENT: "${PUSHOVER_USER_KEY}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  traefik:
    <<: *options
    image: traefik:v3.2
    container_name: traefik
    environment:
      <<: *environment
      CF_DNS_API_TOKEN: "${CLOUDFLARE_API_TOKEN:?err}"
      CLOUDFLARE_POLLING_INTERVAL: 10
      CLOUDFLARE_PROPAGATION_TIMEOUT: 300
      PRIVATE_DOMAIN: "${PRIVATE_DOMAIN}"
    extra_hosts:
      - host.docker.internal:host-gateway
    ports:
      - 80:80
      - 443:443
      - 853:853
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "${CONFIG_DIR}/traefik/conf:/etc/traefik"
      - "${CONFIG_DIR}/traefik/log:/var/log"
    command:
      - --log.level=INFO
      - --accesslog.filepath=/var/log/access.log
      - --accesslog.filters.statuscodes=400-499
      - --api=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.file.directory=/etc/traefik
      - --providers.file.watch=true
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.dot.address=:853
      - --entrypoints.dot.http.tls.certResolver=leresolver
      # - --entrypoints.dot.http.tls.domains[0].main=${PRIVATE_DOMAIN}
      # - --entrypoints.dot.http.tls.domains[0].sans=*.${PRIVATE_DOMAIN}
      - --entrypoints.websecure.address=:443
      - --entryPoints.websecure.forwardedHeaders.insecure=false
      - --entryPoints.websecure.forwardedHeaders.trustedIPs=${DOCKER_SUBNET}
      - --entrypoints.websecure.http.tls.certResolver=leresolver
      - --entrypoints.websecure.http.tls.domains[0].main=${PRIVATE_DOMAIN}
      - --entrypoints.websecure.http.tls.domains[0].sans=*.${PRIVATE_DOMAIN}
      - --certificatesresolvers.leresolver.acme.dnschallenge=true
      - --certificatesresolvers.leresolver.acme.dnschallenge.disablepropagationcheck=true # for internal domain
      - --certificatesresolvers.leresolver.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.leresolver.acme.dnschallenge.resolvers=1.1.1.1:53
      - --certificatesresolvers.leresolver.acme.storage=/etc/traefik/acme.json
      - --certificatesresolvers.leresolver.acme.email=${ACME_EMAIL}
      # - --certificatesresolvers.leresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
      - --serverstransport.insecureskipverify=true
    labels:
      traefik.enable: "true"
      traefik.http.routers.traefik.rule: Host(`traefik.${PRIVATE_DOMAIN}`)
      traefik.http.routers.traefik.service: api@internal
      traefik.http.routers.traefik.entrypoints: websecure
      traefik.tls.option.default.alpnProtocols: http/1.1,h2,dot
