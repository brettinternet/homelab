---
# yaml-language-server: $schema=https://raw.githubusercontent.com/docker/cli/master/cli/compose/schema/data/config_schema_v3.13.json
x-options: &options
  profiles: &profiles [network]
  networks: [default]
  environment: &environment
    TZ: "${TIMEZONE}"
  deploy: &deploy
    restart_policy:
      condition: unless-stopped

services:
  # A record has to exist first
  ddns:
    <<: *options
    image: ghcr.io/brettinternet/cloudflare-ddns:latest
    container_name: ddns
    environment:
      <<: *environment
      CRON: "*/10 * * * *"
      CLOUDFLARE_API_TOKEN: "${CLOUDFLARE_API_TOKEN}"
      CLOUDFLARE_RECORD_NAME: "vpn.${PRIVATE_DOMAIN}"
      CLOUDFLARE_RECORD_PROXIED: "false"
      CLOUDFLARE_RECORD_TYPE: A

  adguard:
    <<: *options
    image: adguard/adguardhome:latest
    container_name: adguard
    hostname: adguard
    ports:
      - 53:53/tcp
      - 53:53/udp
      # - 784:784/udp # DNS over QUIC
      # - 853:853/tcp
    volumes:
      - "${CONFIG_DIR}/adguard/work:/opt/adguardhome/work"
      - "${CONFIG_DIR}/adguard/conf:/opt/adguardhome/conf"
    labels:
      traefik.enable: "true"
      traefik.http.routers.adguard.rule: Host(`dns.${PRIVATE_DOMAIN}`)
      traefik.http.routers.adguard.entrypoints: websecure
      traefik.http.services.adguard.loadbalancer.server.port: 3000
      traefik.http.services.adguard.loadbalancer.passHostHeader: "true"
      traefik.tcp.routers.adguard-tls.rule: HostSNI(`dns.${PRIVATE_DOMAIN}`)
      traefik.tcp.routers.adguard-tls.tls: "true"
      traefik.tcp.routers.adguard-tls.entrypoints: dot
      traefik.tcp.services.adguard-tls.loadbalancer.server.port: 53

  smokeping:
    <<: *options
    image: ghcr.io/linuxserver/smokeping:latest
    container_name: ping
    hostname: smokeping
    environment:
      <<: *environment
      PUID: "${PUID}"
      PGID: "${PGID}"
    volumes:
      - "${CONFIG_DIR}/smokeping/config:/config"
      - "${CONFIG_DIR}/smokeping/data:/data"
    labels:
      traefik.enable: "true"
      traefik.http.routers.ping.rule: Host(`ping.${PRIVATE_DOMAIN}`)
      traefik.http.routers.ping.entrypoints: websecure
      traefik.http.services.ping.loadbalancer.server.port: 80
      traefik.http.middlewares.smokeping-redirectregex.redirectRegex.regex: /smokeping/$
      traefik.http.middlewares.smokeping-redirectregex.redirectRegex.replacement: /
      traefik.http.middlewares.smokeping-addprefix.addPrefix.prefix: /smokeping
      traefik.http.routers.ping.middlewares: smokeping-redirectregex,smokeping-addprefix

  healthchecks:
    <<: *options
    image: ghcr.io/linuxserver/healthchecks:latest
    container_name: healthchecks
    hostname: healthchecks
    environment:
      <<: *environment
      PUID: "${PUID}"
      PGID: "${PGID}"
      SUPERUSER_EMAIL: "${HEALTHCHECKS_SUPERUSER_EMAIL}"
      SUPERUSER_PASSWORD: "${HEALTHCHECKS_SUPERUSER_PASSWORD}"
      SECRET_KEY: "${HEALTHCHECKS_SECRET_KEY}"
      DEBUG: "False"
      REGISTRATION_OPEN: "False"
      SITE_ROOT: "https://hc.${PRIVATE_DOMAIN}"
      SITE_NAME: Healthchecks
      SITE_LOGO_URL: /static/img/logo.svg
      INTEGRATIONS_ALLOW_PRIVATE_IPS: "True"
    volumes:
      - "${CONFIG_DIR}/healthchecks:/config"
      - "${CONFIG_DIR}/healthchecks/logo.svg:/app/healthchecks/static-collected/img/logo.svg"
    labels:
      traefik.enable: "true"
      traefik.http.routers.healthchecks.rule: Host(`hc.${PRIVATE_DOMAIN}`)
      traefik.http.routers.healthchecks.entrypoints: websecure
      traefik.http.services.healthchecks.loadbalancer.server.port: 8000
