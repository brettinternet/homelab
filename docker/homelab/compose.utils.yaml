---
x-options: &options
  profiles: [utils]
  networks: [default]
  environment: &environment
    TZ: "${TIMEZONE}"
  deploy:
    restart_policy:
      condition: unless-stopped

services:
  mealie:
    <<: *options
    image: ghcr.io/mealie-recipes/mealie:v1.0.0-RC1.1
    container_name: mealie
    environment:
      <<: *environment
      WEB_CONCURRENCY: 1
      MAX_WORKERS: 1
      PUID: "${PUID}"
      PGID: "${PGID}"
      TOKEN_TIME: 720 # 24 hours * 30 days
      BASE_URL: "https://recipes.${PUBLIC_DOMAIN}"
      AUTO_BACKUP_ENABLED: "true"
      ALLOW_SIGNUP: "false"
    volumes:
      - "${CONFIG_DIR}/mealie:/app/data"
    labels:
      traefik.enable: "true"
      traefik.http.routers.mealie.rule: Host(`recipes.${PUBLIC_DOMAIN}`)
      traefik.http.routers.mealie.entrypoints: websecure
      traefik.http.services.mealie.loadbalancer.server.port: 9000

  atuin:
    <<: *options
    image: ghcr.io/atuinsh/atuin:latest
    container_name: atuin
    command: server start
    user: "${PUID}:${PGID}"
    links:
      - atuin-postgres:db
    environment:
      <<: *environment
      ATUIN_HOST: "0.0.0.0"
      ATUIN_OPEN_REGISTRATION: "true"
      ATUIN_DB_URI: postgres://${ATUIN_DB_USERNAME}:${ATUIN_DB_PASSWORD}@db/atuin
      RUST_LOG: info,atuin_server=info
    volumes:
      - "${CONFIG_DIR}/atuin:/config"
    labels:
      traefik.enable: "true"
      traefik.http.routers.atuin.rule: Host(`sh.${PRIVATE_DOMAIN}`)
      traefik.http.routers.atuin.entrypoints: websecure
      traefik.http.services.atuin.loadbalancer.server.port: 8888

  atuin-postgres:
    <<: *options
    image: postgres:17
    container_name: atuin-postgres
    environment:
      <<: *environment
      POSTGRES_USER: ${ATUIN_DB_USERNAME}
      POSTGRES_PASSWORD: ${ATUIN_DB_PASSWORD}
      POSTGRES_DB: atuin
    volumes:
      - "${CONFIG_DIR}/atuin-postgres:/var/lib/postgresql/data/"

  linkding:
    <<: *options
    container_name: linkding
    image: sissbruecker/linkding:latest
    volumes:
      - "${CONFIG_DIR}/linkding:/etc/linkding/data"
    labels:
      traefik.enable: "true"
      traefik.http.routers.linkding.rule: Host(`bookmarks.${PUBLIC_DOMAIN}`)
      traefik.http.routers.linkding.entrypoints: websecure
      traefik.http.services.linkding.loadbalancer.server.port: 9090

  miniflux:
    <<: *options
    container_name: miniflux
    image: docker.io/miniflux/miniflux:latest
    # depends_on: [miniflux-postgres]
    environment:
      <<: *environment
      CREATE_ADMIN: "1"
      RUN_MIGRATIONS: "1"
      ADMIN_USERNAME: "${MINIFLUX_ADMIN_USERNAME}"
      ADMIN_PASSWORD: "${MINIFLUX_ADMIN_PASSWORD}"
      DATABASE_URL: postgres://miniflux:${MINIFLUX_DB_PASSWORD}@miniflux-postgres/miniflux?sslmode=disable
    labels:
      traefik.enable: "true"
      traefik.http.routers.miniflux.rule: Host(`rss.${PUBLIC_DOMAIN}`)
      traefik.http.routers.miniflux.entrypoints: websecure
      traefik.http.services.miniflux.loadbalancer.server.port: 8080

  miniflux-postgres:
    <<: *options
    image: postgres:17-alpine
    container_name: miniflux-postgres
    environment:
      <<: *environment
      POSTGRES_USER: miniflux
      POSTGRES_PASSWORD: ${MINIFLUX_DB_PASSWORD}
      POSTGRES_DB: miniflux
    volumes:
      - "${CONFIG_DIR}/miniflux-postgres:/var/lib/postgresql/data/"

  gickup:
    <<: *options
    image: buddyspencer/gickup:latest
    container_name: gickup
    command: [/gickup/conf.yaml]
    environment:
      <<: *environment
      GICKUP_GITHUB_TOKEN: "${GICKUP_GITHUB_TOKEN}"
      GICKUP_GITLAB_TOKEN: "${GICKUP_GITLAB_TOKEN}"
      GICKUP_S3_ACCESS_KEY_ID: "${GICKUP_S3_ACCESS_KEY_ID}"
      GICKUP_S3_SECRET_KEY: "${GICKUP_S3_SECRET_KEY}"
    volumes:
      - "${CONFIG_DIR}/gickup/conf.yaml:/gickup/conf.yaml"
      - "${CONFIG_DIR}/git:/destination"

  cgit:
    image: ghcr.io/brettinternet/cgit:latest
    container_name: cgit
    environment:
      <<: *environment
      ROOT_TITLE: "git.${PUBLIC_DOMAIN}"
      ROOT_DESC: Mirrors of various public projects
      ROOT_README: /srv/git/README.md
      SECTION_FROM_STARTPATH: 1
      NOPLAINEMAIL: 1
      MAX_REPO_COUNT: 50 # per page
    volumes:
      - "${CONFIG_DIR}/git/github.com:/srv/git"
    labels:
      traefik.enable: "true"
      traefik.http.routers.cgit.rule: Host(`git.${PUBLIC_DOMAIN}`)
      traefik.http.routers.cgit.entrypoints: websecure
      traefik.http.services.cgit.loadbalancer.server.port: 80

  gickup-priv:
    <<: *options
    image: buddyspencer/gickup:latest
    container_name: gickup-priv
    command: [/gickup/conf.yaml]
    environment:
      <<: *environment
      GICKUP_GITHUB_TOKEN: "${GICKUP_GITHUB_TOKEN}"
      GICKUP_GITLAB_TOKEN: "${GICKUP_GITLAB_TOKEN}"
      GICKUP_S3_ACCESS_KEY_ID: "${GICKUP_S3_ACCESS_KEY_ID}"
      GICKUP_S3_SECRET_KEY: "${GICKUP_S3_SECRET_KEY}"
    volumes:
      - "${CONFIG_DIR}/gickup-priv/conf.yaml:/gickup/conf.yaml"
      - "${CONFIG_DIR}/git-priv:/destination"
