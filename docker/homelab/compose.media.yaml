---
x-options: &options
  profiles: [media]
  networks: [default]
  environment: &environment
    TZ: "${TIMEZONE}"
  deploy:
    restart_policy:
      condition: unless-stopped

x-media-volume:
  driver_opts: &media_driver_opts
    type: nfs
    o: addr=${MEDIA_IP},hard,timeo=600,retrans=3,proto=tcp,nfsvers=4.2,port=2049,rsize=4096,wsize=4096,noacl,nocto,noatime,nodiratime
    device: :/

# TODO: use new volume subpaths feature: https://docs.docker.com/compose/compose-file/05-services/#volumes
volumes:
  media:
    name: media
    driver_opts:
      <<: *media_driver_opts
      device: :/media
  media_library:
    name: media_library
    driver_opts:
      <<: *media_driver_opts
      device: :/media/library
  filler_audio_library:
    name: filler_audio_library
    driver_opts:
      <<: *media_driver_opts
      device: :/media/library/filler/audio
  filler_output_library:
    name: filler_output_library
    driver_opts:
      <<: *media_driver_opts
      device: :/media/library/filler/output
  books:
    name: books
    driver_opts:
      <<: *media_driver_opts
      device: :/media/library/books
  usenet_complete:
    name: usenet_complete
    driver_opts:
      <<: *media_driver_opts
      device: :/media/usenet/complete
  usenet_incomplete:
    name: usenet_incomplete
    driver_opts:
      <<: *media_driver_opts
      device: :/media/usenet/incomplete
  cameras:
    name: cameras
    driver_opts:
      <<: *media_driver_opts
      device: :/media/cameras

services:
  plex:
    <<: *options
    image: plexinc/pms-docker:latest
    container_name: plex
    environment:
      <<: *environment
      PLEX_UID: "${PUID}"
      PLEX_GID: "${PGID}"
      # Remote access will look at `ADVERTISE_IP`, but because it's behind a proxy, it's likely that
      # the dashboard will say "Not available outside your network" even though it is... >:(
      # The local IP is also required for direct play with some apps (such as the Apple TV apparently)
      ADVERTISE_IP: "https://plex.${PUBLIC_DOMAIN},http://${PLEX_HOST_IP}:32400"
      ALLOWED_NETWORKS: "${DOCKER_SUBNET},${PLEX_ALLOWED_NETWORKS}"
    cap_add:
      - CAP_NET_RAW
      - CAP_NET_BIND_SERVICE
    devices:
      - /dev/dri
      - /dev/dvb
    ports:
      # - 127.0.0.1:32400:32400/tcp
      - 32400:32400/tcp
      # Plex DLNA Server
      # GDM Network discovery
      # https://support.plex.tv/articles/200430283-network/
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
    volumes:
      - "${CONFIG_DIR}/plex:/config"
      - media_library:/data/library
    tmpfs:
      - /tmp
    labels:
      traefik.enable: "true"
      traefik.http.routers.plex.rule: Host(`plex.${PUBLIC_DOMAIN}`)
      traefik.http.services.plex.loadbalancer.server.port: 32400

  overseerr:
    <<: *options
    image: sctx/overseerr:latest
    container_name: overseerr
    security_opt:
      - seccomp:unconfined
    volumes:
      - "${CONFIG_DIR}/overseerr:/app/config"
    labels:
      traefik.enable: "true"
      traefik.http.routers.overseer.rule: Host(`request.${PUBLIC_DOMAIN}`)
      traefik.http.services.overseer.loadbalancer.server.port: 5055
      traefik.http.routers.overseer.entrypoints: websecure

  tautulli:
    <<: *options
    image: ghcr.io/tautulli/tautulli:latest
    container_name: tautulli
    environment:
      <<: *environment
      PUID: "${PUID}"
      PGID: "${PGID}"
    volumes:
      - "${CONFIG_DIR}/tautulli:/config"
    labels:
      traefik.enable: "true"
      traefik.http.routers.tautulli.rule: Host(`tautulli.${PRIVATE_DOMAIN}`)
      traefik.http.services.tautulli.loadbalancer.server.port: 8181
      traefik.http.routers.tautulli.entrypoints: websecure

  sabnzbd:
    <<: *options
    image: ghcr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    environment:
      <<: *environment
      PUID: "${PUID}"
      PGID: "${PGID}"
    volumes:
      - "${CONFIG_DIR}/sabnzbd:/config"
      - usenet_complete:/data/usenet/complete
      - usenet_incomplete:/data/usenet/incomplete
    labels:
      traefik.enable: "true"
      traefik.http.routers.sabnzbd.rule: Host(`nzb.${PRIVATE_DOMAIN}`)
      traefik.http.services.sabnzbd.loadbalancer.server.port: 8080
      traefik.http.routers.sabnzbd.entrypoints: websecure

  prowlarr:
    <<: *options
    image: ghcr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      <<: *environment
      PUID: "${PUID}"
      PGID: "${PGID}"
    volumes:
      - "${CONFIG_DIR}/prowlarr:/config"
    labels:
      traefik.enable: "true"
      traefik.http.routers.prowlarr.rule: Host(`prowlarr.${PRIVATE_DOMAIN}`)
      traefik.http.services.prowlarr.loadbalancer.server.port: 9696
      traefik.http.routers.prowlarr.entrypoints: websecure

  radarr:
    <<: *options
    image: ghcr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      <<: *environment
      PUID: "${PUID}"
      PGID: "${PGID}"
    volumes:
      - "${CONFIG_DIR}/radarr:/config"
      - media:/data
    labels:
      traefik.enable: "true"
      traefik.http.routers.radarr.rule: Host(`radarr.${PRIVATE_DOMAIN}`)
      traefik.http.services.radarr.loadbalancer.server.port: 7878
      traefik.http.routers.radarr.entrypoints: websecure

  sonarr:
    <<: *options
    image: ghcr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      <<: *environment
      PUID: "${PUID}"
      PGID: "${PGID}"
    volumes:
      - "${CONFIG_DIR}/sonarr:/config"
      - media:/data
    labels:
      traefik.enable: "true"
      traefik.http.routers.sonarr.rule: Host(`sonarr.${PRIVATE_DOMAIN}`)
      traefik.http.services.sonarr.loadbalancer.server.port: 8989
      traefik.http.routers.sonarr.entrypoints: websecure

  unpackerr:
    <<: *options
    image: golift/unpackerr
    container_name: unpackerr
    volumes:
      - media:/data
    environment:
      <<: *environment
      UN_SONARR_0_URL: http://sonarr:8989
      UN_SONARR_0_API_KEY: "${SONARR_API_KEY}"
      UN_SONARR_0_PATHS_0: /data/usenet/incomplete
      UN_RADARR_0_URL: http://radarr:7878
      UN_RADARR_0_API_KEY: "${RADARR_API_KEY}"
      UN_RADARR_0_PATHS_0: /data/usenet/incomplete

  ersatztv:
    <<: *options
    image: docker.io/jasongdove/ersatztv:latest
    container_name: ersatztv
    privileged: true
    volumes:
      - "${CONFIG_DIR}/ersatztv:/root/.local/share/ersatztv"
      - media_library:/library
      - filler_output_library:/filler
    devices:
      - /dev/dri
    tmpfs:
      - /root/.local/share/etv-transcode
    labels:
      traefik.enable: "true"
      traefik.http.routers.ersatztv.rule: Host(`tv.${PRIVATE_DOMAIN}`)
      traefik.http.services.ersatztv.loadbalancer.server.port: 8409
      traefik.http.routers.ersatztv.entrypoints: websecure

  ersatztv-filler:
    <<: *options
    image: docker.io/liam2003/ersatztv-filler:latest
    container_name: ersatztv-filler
    volumes:
      - "${CONFIG_DIR}/ersatztv-filler/config:/app/config"
      - "${CONFIG_DIR}/ersatztv-filler/themes:/app/themes"
      - filler_audio_library:/audio:ro
      - filler_output_library:/output
    tmpfs:
      - /root/.local/share/etv-transcode
    labels:
      traefik.enable: "true"
      traefik.http.routers.ersatztv-filler.rule: Host(`tvf.${PRIVATE_DOMAIN}`)
      traefik.http.services.ersatztv-filler.loadbalancer.server.port: 8408
      traefik.http.routers.ersatztv-filler.entrypoints: websecure

  calibre_web:
    <<: *options
    image: ghcr.io/linuxserver/calibre-web:latest
    container_name: calibre-web
    environment:
      <<: *environment
      PUID: "${PUID}"
      PGID: "${PGID}"
      DOCKER_MODS: linuxserver/mods:universal-calibre
    volumes:
      - "${CONFIG_DIR}/calibre-web:/config"
      - books:/data
    labels:
      traefik.enable: "true"
      traefik.http.routers.calibre-web.rule: Host(`books.${PUBLIC_DOMAIN}`)
      traefik.http.services.calibre-web.loadbalancer.server.port: 8083
      traefik.http.routers.calibre-web.entrypoints: websecure
