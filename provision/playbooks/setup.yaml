---
- name: Setup Linux
  hosts: linux
  become: true
  pre_tasks:
    - name: Check supported distribution
      ansible.builtin.fail:
        msg:
          - "Unsupported distribution: {{ ansible_facts['distribution'] | lower }}"
          - This role only supports Arch Linux
      when: ansible_distribution | lower != 'archlinux'

    - name: Install packages
      ansible.builtin.package:
        state: present
        name: "{{ packages }}"

    - name: Setup rust # noqa no-changed-when
      ansible.builtin.command: rustup default stable
      # changed when stat exists ~/.rustup/toolchains/stable-x86_64-unknown-linux-gnu

    - name: Install AUR dependencies
      ansible.builtin.include_role:
        name: aur
      vars:
        state: present
        packages: "{{ aur_packages }}"
      when: ansible_distribution | lower == 'archlinux'

  roles:
    # TODO: setup powertop auto tune service https://wiki.archlinux.org/index.php/Powertop
    # TODO: https://wiki.archlinux.org/title/NetworkManager#Encrypted_Wi-Fi_passwords
    - os
    - user
    - role: dotfiles
      vars:
        dotfiles_repo: https://github.com/brettinternet/dotfiles
    # - desktop
    - ssh
    - etckeeper
    - clamav

- name: Setup Windows
  hosts: windows
  become: true
  roles:
    - chocolatey
  post_tasks:
    - name: Install packages
      chocolatey.chocolatey.win_chocolatey:
        name: "{{ item.name }}"
        package_params: "{{ item.params }}"
        state: present
      loop: "{{ packages }}"

    # Path shortcuts: https://superuser.com/a/217506
    - name: Set dotfiles path fact
      ansible.builtin.set_fact:
        dotfiles_path: '%UserProfile%\dotfiles'

    - name: Stat dotfiles repo
      ansible.windows.win_stat:
        path: "{{ dotfiles_path }}"
      register: dotfiles_result

    - name: Clone dotfiles
      ansible.windows.win_powershell:
        script: git --no-pager clone https://github.com/brettinternet/dotfiles {{ dotfiles_path }}
      when:
        - not dotfiles_result.stat.exists
        - not dotfiles_result.stat.isdir

    - name: Update dotfiles
      ansible.windows.win_powershell:
        script: git pull origin main
      when:
        - dotfiles_result.stat.isdir

    # A shortcut or `mklink` doesn't appear to work for Windows Terminal to load the $PROFILE
    - name: Copy a single file
      ansible.windows.win_copy:
        src: '{{ dotfiles_path }}\{{ item }}'
        dest: '%UserProfile%\Documents\PowerShell\{{ item }}'
        force: true
      with_items:
        - Microsoft.PowerShell_profile.ps1

    - name: Create an application shortcut on the desktop
      community.windows.win_shortcut:
        src: '{{ dotfiles_path }}\scripts\{{ item }}'
        dest: '%APPDATA%\Microsoft\Windows\Start Menu\Programs\Startup\{{ item }}'
        icon: '{{ dotfiles_path }}\scripts\{{ item }},0'
      with_items:
        - CapsToEsc.ahk

    - name: Install latest PowerShellGet
      ansible.windows.win_powershell:
        script: Install-Module PowershellGet -Force

    # Preferred over installing with Chocolatey
    - name: Install posh-git
      ansible.windows.win_powershell:
        script: PowerShellGet\Install-Module posh-git -Scope CurrentUser -AllowPrerelease -Force
