#!/bin/bash

# Forked from: https://www.reddit.com/r/unixporn/comments/ed8fnh/i3my_good_ol_arch_rice/fbg72c8

NAME=$(basename "$0")

usage () {
    cat <<- EOF
Usage:   $NAME [options]

Options:
    -h      Display this message
    -r      Program launcher & run dialog
    -w      Switch between open windows
    -e      Browse emojis
    -c      Select previous clipboard entries
    -b      Browser search by keyword
    -d      Dunst context menu handler
    -p      Session power choice

EOF
}

while getopts ":hewcbrpd" opt; do
    case $opt in
        h)
            usage
            exit 0
            ;;
        r)
            rofi -modi run,drun -show drun -display-drun "" -display-run "" \
                -width 600 -columns 1 -lines 6 -show-icons \
                -matching fuzzy -i \
                -theme-str '#window { width: 600px; }' \
                -theme-str '#textbox-prompt-sep { enabled: false;}'
            ;;
        w)
            rofi -modi window -show window -hide-scrollbar \
                -matching fuzzy -i -location 6 \
                -width 40 -lines 10 \
                -theme-str '#scrollbar { handle-width: 0;}' \
                -theme-str '#inputbar { enabled: false;}'
            ;;
        e)
            # https://github.com/Mange/rofi-emoji
            rofi -show emoji -modi emoji -display-emoji "" \
                -location 4 \
                -columns 2 -width 30 -lines 10 \
                -theme-str '#textbox-prompt-sep { enabled: false;}'
            ;;
        c)
            # https://github.com/erebe/greenclip
            rofi -modi "clipboard:greenclip print" \
                -show "clipboard" -columns 1 \
                -width 20 -lines 8
            ;;
        b)
            # Used by sr for custom search `S`; https://gitlab.com/surfraw/Surfraw/-/wikis/Configuration
            export SURFRAW_customsearch_provider="${SURFRAW_customsearch_provider:-google}"
            # Available elvi: https://gitlab.com/surfraw/Surfraw/-/wikis/current-elvi
            # TODO: add custom elvi: site:stackexchange.com OR site:stackoverflow.com "query"
            # use inspiration from: https://github.com/davatorium/rofi-scripts/tree/master/rofi-surfraw
            ELVI=$(sr -elvi | awk -F'-' '{print $1}' \
                | sed '/:/d' | awk '{$1=$1};1')
            QUERY=$(echo "$ELVI" | rofi \
                -kb-row-select 'Tab' -kb-row-tab 'Control+space' \
                -dmenu -i -p 'web' -location 8 \
                -width 20 -lines 8 \
                -theme-str '#scrollbar { handle-width: 0;}'
            )
            if [ -n "$QUERY" ]; then
                ARGS=()
                DOMAIN=$(echo $QUERY | head -n1 | awk '{print $1;}')
                # Custom search if no domain is matched
                [[ ! $(echo $ELVI | grep -w $DOMAIN) ]] && ARGS+=( 'S' )
                ARGS+=( "$QUERY" )
                surfraw -browser=/usr/bin/xdg-open ${ARGS[@]}
            fi
            exit 0
            ;;
        d)
            # Remove content in () which is notification summary
            sed -e 's/([^()]*)//g' | rofi -dmenu -p "" \
                -width 10 -lines 4 -columns 1 \
                -location 5 -xoffset -430 -yoffset -15 \
                -theme-str '#textbox-prompt-sep { enabled: false;}' \
                -theme-str '#scrollbar { handle-width: 0;}' \
                -theme-str '#inputbar { enabled: false;}' \
                -theme-str '#window { padding: 15 20;}'
            ;;
        p)
            #SCREEN_HEIGHT=$(xrandr | grep -E ' *[0-9]*x[0-9]* *[0-9][0-9]\.[0-9][0-9]\*\+' | awk '{print $1}' | head -n 1 | cut -f2 -d 'x')
            ANS=$(echo " Lock| Exit| Suspend| Reboot| Shutdown" | \
                rofi -sep "|" -dmenu -i -p '' "" \
                -lines 5 -columns 1 \
                -theme-str '#window { width: 220px; }' \
                -theme-str '#textbox-prompt-sep { enabled: false;}' \
                -theme-str '#scrollbar { handle-width: 0;}' \
                -theme-str '#inputbar { enabled: false;}'
            )
            case "$ANS" in
                *Lock)
                        lock
                    ;;
                *Exit)
                        i3-msg exit
                    ;;
                *Suspend)
                        systemctl hibernate
                    ;;
                *Reboot)
                        systemctl reboot
                    ;;
                *Shutdown)
                        systemctl -i poweroff
                    ;;
            esac
            ;;
        *)
            echo -e "Option does not exist: -$OPTARG"
            usage
            exit 1
            ;;
    esac
done
shift $((OPTIND - 1))

exit 0
