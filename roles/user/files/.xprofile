#!/bin/sh

# Start X applications for user session: https://wiki.archlinux.org/index.php/Xprofile
# More about autostarting: https://wiki.archlinux.org/index.php/Autostarting

source $HOME/.profile

scope() {

    # -- Globals ----------------------------------------

    unset TMOUT

    # non-standard, used by https://build.i3wm.org/docs/i3-sensible-terminal.html
    export TERMINAL=alacritty

    # Used to configure QT apps with qt5ct (especially set font family -
    # unless there's an easier way? Such as QT_QPA_FONT?)
    # Can we set the QT font elsewhere without having to use qt5ct?
    if command -v qt5ct &> /dev/null; then
        export QT_QPA_PLATFORMTHEME=qt5ct
    fi

    # -- Display ----------------------------------------

    # nvidia
    if command -v nvidia-settings &> /dev/null; then
        export __GL_YIELD="USLEEP"
        # Set for one monitor and once xrandr sets up other monitors, settings appear to propogate to other monitors
        nvidia-settings --assign CurrentMetaMode="nvidia-auto-select +0+0 { ForceFullCompositionPipeline = On }"
        # See also: https://wiki.archlinux.org/index.php/NVIDIA/Troubleshooting#Multi-monitor
    fi

    # xrandr
    local WORKSTATION="${MY_SCREENLAYOUT:-default}"
    local XRANDR_DIR="$HOME/.screenlayout"
    local XRANDR_SCRIPT="$XRANDR_DIR/$WORKSTATION.sh"
    if [ -f $XRANDR_SCRIPT ]; then
        /bin/bash -c $XRANDR_SCRIPT
    else
        echo "No xrandr script found in .screenlayout"
    fi

    # -- System ----------------------------------------

    # Turn off bell and
    # set DPMS timeouts to zero https://wiki.archlinux.org/index.php/Display_Power_Management_Signaling#Modify_DPMS_and_screensaver_settings_with_a_command
    # Instead of xss-lock responding to DPMS settings (https://wiki.archlinux.org/index.php/Session_lock#xss-lock), we use xidlehook below
    # TODO: Perhaps this should be different if host is a laptop
    xset -b dpms 0 0 0 s off

    # systemd hook handler
    # https://wiki.archlinux.org/index.php/Power_management#xss-lock
    # important note about resuming from sleep:
    # https://wiki.archlinux.org/index.php/Power_management#Sleep_hooks
    xss-lock -- lock &

    local THIRTY_MIN=1800
    local LOCK_WARN_ID=6313
    local CLEAR_LOCK_WARN="dunstify -C $LOCK_WARN_ID"
    # Overly verbose, but I can't seem to use any of these methods with xidlehook: https://stackoverflow.com/a/28678964/6817437
    if [ "$IS_VIRTUAL_GUEST" = true ]; then
        xidlehook --not-when-fullscreen --not-when-audio \
            --timer $(($THIRTY_MIN - 30)) "dunstify -a 'system' -r $LOCK_WARN_ID -u critical -t 29000 'Locking soon...'" "$CLEAR_LOCK_WARN" \
            --timer 30 $MY_BIN/lock "$CLEAR_LOCK_WARN" &
    else
        xidlehook --not-when-fullscreen --not-when-audio \
            --timer $(($THIRTY_MIN - 30)) "dunstify -a 'system' -r $LOCK_WARN_ID -u critical -t 29000 'Locking soon...'" "$CLEAR_LOCK_WARN" \
            --timer 30 $MY_BIN/lock "$CLEAR_LOCK_WARN" \
            --timer $THIRTY_MIN 'systemctl hibernate' "$CLEAR_LOCK_WARN" &
    fi

    xbindkeys
    # Only use b:6 and b:7 with MX Master mouse, otherwise it conflicts with x-axis scroll on touchpads
    if xinput | grep -q "Logitech MX Master"; then
        xbindkeys -f "$HOME/.xbindkeysrc-mouse"
    fi

    # Compositors appear incompatible with VMs
    if ! [ "$IS_VIRTUAL_GUEST" = true ]; then
        # Note: `experimental-backends` allows for dual kawase
        # `no-fading-openclose`: https://wiki.archlinux.org/index.php/Picom#Slock_after_suspend
        picom -b --experimental-backends --no-fading-openclose
    fi

    if [ -d "$MY_WALLPAPERS" ]; then
        feh --no-fehbg --randomize --bg-fill $MY_WALLPAPERS/* &
    fi

    # https://wiki.archlinux.org/index.php/Polkit
    /usr/lib/polkit-kde-authentication-agent-1 &> /dev/null &

    unclutter --timeout 3 &

    if command -v greenclip &> /dev/null; then
        greenclip daemon &> /dev/null &
    fi

    if command -v redshift &> /dev/null; then
        local LAT="40.8255921"
        local LON="-111.8084499"
        redshift -l "$LAT:$LON" -m randr -t 6500:3000 &
    fi

    if [[ "$IS_LAPTOP" = "true" && -x "$(command -v fusuma)" ]]; then
        fusuma -d 2>&1
        # xinput set-prop 12 268 1 # for touchpad tap
    fi

    # https://wiki.archlinux.org/index.php/AppArmor#Get_desktop_notification_on_DENIED_actions
    if command -v aa-notify &> /dev/null; then
        aa-notify -p -s 1 -w 60 -f /var/log/audit/audit.log || true
    fi

    # Source: https://wiki.archlinux.org/index.php/GNOME/Keyring#xinitrc_method
    if command -v gnome-keyring-daemon &> /dev/null; then
        eval $(gnome-keyring-daemon --start --daemonize --components=pkcs11,secrets,ssh)
        export SSH_AUTH_SOCK
    fi

    # -- Applets ----------------------------------------

    nm-applet &

    if command -v blueman-applet &> /dev/null; then
        blueman-applet &
    fi

    if command -v opensnitch-ui &> /dev/null; then
        opensnitch-ui &
    fi

    if [[ -x "$(command -v solaar)" && "$(solaar show 2>&1)" != *"Logitech receiver not found" ]]; then
        solaar -w hide &
    fi

    if [[ "$IS_LAPTOP" = "true" && -x "$(command -v cbatticon)" ]]; then
        cbatticon -u 20 -r 3 \
            -x notify-battery \
            -c "/usr/bin/systemctl hibernate" &
    fi

    if [ "$IS_VIRTUAL_GUEST" = true ]; then
        spice-vdagent

        $MY_BIN/xrandr-loop &
    fi


    # -- Workspace ----------------------------------------

    # Initialize labeled alacritty window as i3 scratchpad
    alacritty --class "alacritty-scratchpad1" &
    alacritty --class "alacritty-scratchpad2" &

}

scope
