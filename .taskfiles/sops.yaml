---
version: "3"

tasks:
  init:
    desc: Setup SOPS
    cmds:
      - task: age-setup

  age-setup:
    cmds:
      - age-keygen -o age.agekey
      - "mkdir -p {{.AGE_DIR}}"
      - "mv age.agekey {{.AGE_FILE}}"
      - "echo 'Source from .profile: \n\nexport SOPS_AGE_KEY_FILE=~/.config/sops/age/keys.txt'"
    status:
      - "test -f {{.AGE_FILE}}"

  echo:
    desc: Echo SOPS secret
    cmds:
      - sops exec-env {{.file}} 'env | grep "^{{.var}}"'
    requires:
      vars: [var, file]

  encrypt:
    desc: encrypt sops file 'to use must include -- before path to file.' eg "task sops:encrypt -- file.yaml"
    cmds:
      - sops --encrypt --in-place {{.CLI_ARGS}}

  decrypt:
    desc: decrypt sops file 'to use must include -- before path to file.'  eg "task sops:decrypt -- file.yaml"
    cmds:
      - sops --decrypt --in-place {{.CLI_ARGS}}

  decrypt-docker:
    desc: decrypt sops file 'to use must include -- before path to file.'  eg "task sops:decrypt -- file.yaml"
    cmds:
      - sops --decrypt --in-place docker/net/sops.env docker/homelab/sops.env

  list:
    desc: List all sops files
    cmds:
      - find . -name '*.sops.yaml' | while read -r file; do echo "${file}"; done

  encrypt-all:
    desc: Encrypt all Kubernetes SOPS secrets that are not already encrypted
    cmds:
      - for: { var: file }
        task: .encrypt-file
        vars:
          file: "{{.ITEM}}"
    vars:
      file:
        sh: |
          find "{{.ANSIBLE_DIR}}" "{{.DOCKER_DIR}}" -type f -name "*sops.*" -exec grep -L "ENC\[AES256_GCM" {} \;

  .encrypt-file:
    internal: true
    cmd: sops --encrypt --in-place {{.file}}
    requires:
      vars: ["file"]
    preconditions:
      - { msg: "Missing Sops config file", sh: "test -f {{.SOPS_CONFIG_FILE}}" }
      - { msg: "Missing Sops Age key file", sh: "test -f {{.AGE_FILE}}" }
