---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

x-dynamic-vars: &dynamic-vars
  PROJECT_DIR: "{{.ROOT_DIR}}/docker/{{.PROJECT}}"
  COMPOSE_FILES:
    sh: find {{.PROJECT_DIR}} -type f -iname "compose*.yaml" -exec basename {} ';' | sort -r
  COMPOSE_FILES_ARGS: -f {{.COMPOSE_FILES | splitLines | join " -f "}}
  COMPOSE_COMMAND: docker-compose --parallel 5 -p $COMPOSE_PROJECT {{.COMPOSE_FILES_ARGS}}

vars:
  SECRETS_FILE: sops.env
  SOPS_COMMAND: sops exec-env {{.SECRETS_FILE}}

env:
  COMPOSE_HTTP_TIMEOUT: 300
  COMPOSE_PROJECT: "{{default .PROJECT .COMPOSE_PROJECT}}"
  DOCKER_HOST: "ssh://{{.HOSTNAME}}"
  COMPOSE_PROFILES: "{{.PROFILES}}"

tasks:
  default:
    silent: true
    cmds:
      - task -l

  verify:
    dir: "/{{.PROJECT_DIR}}"
    vars: *dynamic-vars
    desc: Verify compose configs on host
    cmds:
      - "echo 'Compose files:\n\n{{.COMPOSE_FILES}}'"
      - "{{.SOPS_COMMAND}} '{{.COMPOSE_COMMAND}} config'"
    requires:
      vars: [SECRETS_FILE]
    preconditions: &preconditions
      - command -v docker
      - command -v docker-compose
      - command -v sops
      - test -f sops.env

  pull:
    dir: "/{{.PROJECT_DIR}}"
    vars: *dynamic-vars
    desc: Pull images on docker host
    cmds:
      - "{{.SOPS_COMMAND}} '{{.COMPOSE_COMMAND}} pull'"
    requires:
      vars: [SECRETS_FILE]
    preconditions: *preconditions

  up:
    dir: "/{{.PROJECT_DIR}}"
    vars: *dynamic-vars
    desc: Deploy compose files to hosts
    aliases: [start, deploy]
    cmds:
      - echo "Deploying '$COMPOSE_PROJECT' profiles '$COMPOSE_PROFILES' to '$DOCKER_HOST'"
      - "{{.SOPS_COMMAND}} '{{.COMPOSE_COMMAND}} up -d --remove-orphans'"
    requires:
      vars: [SECRETS_FILE]
    preconditions: *preconditions

  stop:
    dir: "/{{.PROJECT_DIR}}"
    vars: *dynamic-vars
    desc: Stop compose containers on host
    cmds:
      - "{{.SOPS_COMMAND}} '{{.COMPOSE_COMMAND}} down --remove-orphans'"
    requires:
      vars: [SECRETS_FILE]
    preconditions:
      - test -f sops.env

  down:
    dir: "/{{.PROJECT_DIR}}"
    vars: *dynamic-vars
    desc: Stop and clean up containers on host
    cmds:
      - "{{.SOPS_COMMAND}} '{{.COMPOSE_COMMAND}} down --remove-orphans --rmi all'"
    requires:
      vars: [SECRETS_FILE]
    preconditions: *preconditions
